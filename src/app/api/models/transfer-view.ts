/* tslint:disable */
import { ExportFormat } from './export-format';
import { Installment } from './installment';
import { Operation } from './operation';
import { PasswordInput } from './password-input';
import { TransactionSubjectsEnum } from './transaction-subjects-enum';
import { TransactionView } from './transaction-view';
import { Transfer } from './transfer';
import { TransferStatusFlowForTransferView } from './transfer-status-flow-for-transfer-view';

/**
 * Details about a balance transfer between accounts
 */
export interface TransferView extends Transfer {

  /**
   * The balance aging counter
   */
  ARate?: string;

  /**
   * The balance maturity
   */
  DRate?: string;

  /**
   * Can the authenticated user chargeback this transfer?
   */
  canChargeback?: boolean;

  /**
   * Reference to the transfer that this transfer has charged back. Only returned if `kind` is `chargeback`.
   */
  chargebackOf?: Transfer;

  /**
   * Reference to the transfer that has charged back this transfer. Only returned if this transfer has been charged back.
   */
  chargedBackBy?: Transfer;

  /**
   * Reference to the transfers generated by this one, if any
   */
  children?: Array<Transfer>;

  /**
   * If a confirmation password is used, contains the definitions on how to request that password from the user. This confirmation password is required when performing sensible actions. Sometimes this is dynamic, for example, the confirmation might be configured to be used only once per session, or operations like payments may have a limit per day to be without confirmation (pinless).
   */
  confirmationPasswordInput?: PasswordInput;

  /**
   * The formats which the data can be exported
   */
  exportFormats?: Array<ExportFormat>;

  /**
   * Reference to the installment which triggered this transfer. Only returned if `kind` is `installment`.
   */
  installment?: Installment;

  /**
   * The list of custom operations the logged user can run over this transfer
   */
  operations?: Array<Operation>;

  /**
   * Reference to the parent transfer that generated this one, if any
   */
  parent?: Transfer;

  /**
   * List with each status this transfer has, with additional information, such as the flow and the log
   */
  statusFlows?: Array<TransferStatusFlowForTransferView>;

  /**
   * If this balance transfer was originated from a transaction (like a payment or scheduled payment), contains the reference to this transaction. Only returned if this `TransferView` is not already in a `TransactionView`.
   */
  transaction?: TransactionView;
  usersWhichCanAddToContacts?: TransactionSubjectsEnum;
  usersWhichCanViewProfile?: TransactionSubjectsEnum;
}
